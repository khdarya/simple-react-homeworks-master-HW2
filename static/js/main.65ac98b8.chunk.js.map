{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","style","mainNav","list","activeClassName","active","to","Message","props","appWrapper","ava","src","avatar","textfield","item1","name","item2","message","item3","time","messageData","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","affair","onClick","deleteAffairCallback","_id","someClass","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","elem","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","greetingInput","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HW4","text","setText","showAlert","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","superSpan","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","SuperRadio","o","i","arr","HW7","PreJunior","Error404","Junior","JuniorPlus","PATH","Routes","path","exact","render","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.65ac98b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__ncmZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"Message_appWrapper__1gSRj\",\"ava\":\"Message_ava__19ySO\",\"textfield\":\"Message_textfield__yDzle\",\"item1\":\"Message_item1__1fMwx\",\"item3\":\"Message_item3__32ms0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainNav\":\"Header_mainNav__32Hr0\",\"list\":\"Header_list__Yqevp\",\"navlink\":\"Header_navlink__3RqKk\",\"active\":\"Header_active__2QtQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3UBY_\",\"error\":\"Greeting_error__vt5Hb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1xOnh\",\"errorInput\":\"SuperInputText_errorInput__5vI5H\",\"error\":\"SuperInputText_error__3Wj65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2YhuA\",\"red\":\"SuperButton_red__3WK4i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1hIK9\",\"column\":\"HW4_column__3OLZz\",\"text\":\"HW4_text__3_Ewe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3vV6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperEditableSpan_superSpan__2kQY7\"};","import React from \"react\";\nimport style from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header() {\n    return (\n        <div>\n            <div className={style.mainNav}>\n               <div className={style.list}>\n                        <div >\n                            <NavLink activeClassName={style.active} to=\"/pre-junior\">PreJunior</NavLink>\n                        </div>\n                        <div>\n                            <NavLink activeClassName={style.active} to=\"/junior\">Junior</NavLink>\n                        </div>\n                        <div>\n                            <NavLink activeClassName={style.active} to=\"/junior-plus\">JuniorPlus</NavLink>\n                        </div>\n                    </div>\n                hover\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport style from './Message.module.css';\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={style.appWrapper}>\n            {/*<div className={style.ava}>*/}\n            {/*<img src='https://sun9-47.userapi.com/c637221/v637221676/40f6/NOdUcMP2TRk.jpg'/>*/}\n            <img className={style.ava} src={props.avatar}/>\n            {/*</div>*/}\n            <div className={style.textfield}>\n                <div className={style.item1}>{props.name}</div>\n                <div className={style.item2}>{props.message}</div>\n                <div className={style.item3}>{props.time} </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"some text\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport style from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix\n\n    return (\n        <div >\n            {props.affair.name}\n\n            <SuperButton red\n                         onClick={deleteCallback}\n                         className={style.someClass} >X</SuperButton>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport style from './Affairs.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")}; // need to fix\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter(\"middle\")};\n    const setLow = () => {props.setFilter(\"low\")};\n\n    return (\n        <div >\n\n            {mappedAffairs}\n            <SuperButton red onClick={setAll} className={style.someClass} >All</SuperButton>\n            <SuperButton red onClick={setHigh} className={style.someClass} >High</SuperButton>\n            <SuperButton red onClick={setMiddle} className={style.someClass} >Middle</SuperButton>\n            <SuperButton red onClick={setLow} className={style.someClass} >Low</SuperButton>\n\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\" ; // need to fix any\nexport type AffairType = { _id: number, name: string, priority: FilterType }; // need to fix any\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === \"all\")\n        return affairs;\n    if(filter === \"high\") {\n        return affairs.filter(elem => elem.priority === \"high\" )\n    }\n    if(filter === \"middle\") {\n        return affairs.filter(elem => elem.priority === \"middle\")\n    }\n    if(filter === \"low\") {\n        return affairs.filter(elem => elem.priority === \"low\")\n    }\n    else return affairs;\n\n    // need to fix\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(elem => elem._id !== _id); // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport style from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: boolean // need to fix any\n    totalUsers: any // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    let inputClass = s.greetingInput; // need to fix with (?:)\n    if(error) {\n        inputClass += `${s.error}`\n    }\n\n    return (\n        <div >\n            <input\n                value={name}\n                onChange={setNameCallback}\n                className={inputClass}/>\n            <span>{error}</span>\n            <SuperButton red onClick={addUser}\n                         className={style.someClass}\n            >add</SuperButton>\n            <span>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<boolean>(false); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n\n        setName(e.currentTarget.value)\n\n\n        //setName(\"\"); // need to fix\n    };\n    const addUser = () => {\n        if(name.trim() !== '') {\n            addUserCallback(name)\n            alert(`Hello ${name} !`); // need to fix\n            setName('')\n            setError(false)\n        }\n        alert(`Insert name, please`)\n        setError(true)\n        setName('')\n    };\n\n    const totalUsers: number = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const newUser: UserType = {name: name, _id: v1()}\n        setUsers([...users, newUser]); // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer\n                users={users}\n                addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    setError: (props: string) => void\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        setError,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n        setError('');\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    // const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\n    const finalInputClassName = error ? s.errorInput : s.superInput;\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        onChange && onChange(e);\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.label}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const [error, setError] = useState<string>(\"\")\n    const showAlert = () => {\n\n        text ? setError(\"\") : setError(\"error\")\n\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n            setText('')\n        }\n    }\n    // const error = text ? \"\" : \"error\";\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    setError={setError}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                className={s.text}>\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange} />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;","import React, {\n    DetailedHTMLProps,\n    InputHTMLAttributes,\n    HTMLAttributes,\n    useState,\n    KeyboardEvent,\n    ChangeEvent\n} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\nimport s from \"./SuperEditableSpan.module.css\"\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n    const [error, setError] = useState<string>(\"\")\n\n    const onEnterCallback = () => {\n\n        // setEditMode(); // выключить editMode при нажатии Enter\n        setEditMode(false);\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\n        setEditMode(false)\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n\n        // setEditMode(); // включить editMode при двойном клике\n        setEditMode(true);\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${s.superSpan} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        setError={setError}\n\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        // setValue();\n        setValue(restoreState<string>(\"editable-span-value\", value))\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton red onClick={save}>save</SuperButton>\n            <SuperButton red onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\n\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1]);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\nimport HW7 from \"../../h7/HW7\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n            <HW7/>\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from 'react';\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>JUNIOR</div>\r\n    )\r\n}\r\n\r\nexport default Junior;","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div>JUNIORPLUS</div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus;","import React from \"react\";\nimport {Route, Switch, Redirect}  from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\"\n\n}\n\nfunction Routes() {\n    return (\n        <div>\n\n            <Switch>\n\n            в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR\n            exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)\n\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n\n                // add routes\n\n            у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport {HashRouter} from \"react-router-dom\";\nimport Header from \"../../../p2-homeworks/h5/Header\";\nimport Routes from \"../../../p2-homeworks/h5/Routes\";\n\nfunction App() {\n    return (\n\n        <div className={s.App}>\n           <HashRouter>\n               <Header />\n            <div>react homeworks:</div>\n            <Routes />\n        {/*    <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n\n          </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}